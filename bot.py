import telebot
import sqlite3
import time
import random

# mirea_krasawa_bot
TOKEN = "6006798501:AAGq8MMk0AszZ0r05De910LxUwzWz4fTgUk"
bot = telebot.TeleBot(TOKEN)

# —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
@bot.message_handler(commands=['start'])
def start(message):
    connect = sqlite3.connect("data.db")
    cursor = connect.cursor()
    if str(message.chat.id)[0] != "-":
        bot.send_message(message.chat.id, "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤!")
        return "dm"
    cursor.execute(f"""CREATE TABLE IF NOT EXISTS chat_{str(message.chat.id)[1:]}(
        id INTEGER UNIQUE,
        username TEXT,
        reputation INTEGER,
        cooldown ITEGER
    );""")
    connect.commit()
    id = message.from_user.id
    user_check = cursor.execute(f"SELECT id from chat_{str(message.chat.id)[1:]} WHERE id = {id}").fetchone()
    if user_check is None:
        if message.from_user.username:
            username = message.from_user.username
        elif message.from_user.last_name:
            username = " ".join([message.from_user.first_name, message.from_user.last_name])
        else:
            username = message.from_user.first_name
        cursor.execute(f"INSERT INTO chat_{str(message.chat.id)[1:]} VALUES(?, ?, ?, ?);", [id, username, 0, 0])
        connect.commit()
        bot.send_message(message.chat.id, "–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!")
    else:
        bot.send_message(message.chat.id, "–¢—ã —É–∂–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è!")

# —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, "–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n" +
                    "/start ‚Äì –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –µ—Å–ª–∏ –≤—ã –µ—â—ë –Ω–µ —Å–¥–µ–ª–∞–ª–∏ —ç—Ç–æ–≥–æ;\n" +
                    "/all ‚Äì —É–ø–æ–º—è–Ω—É—Ç—å –≤—Å–µ—Ö –ª—é–¥–µ–π –≤ —á–∞—Ç–µ;\n" +
                    "/coinflip ‚Äì –ø–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É, —á—Ç–æ–±—ã —Ä–µ—à–∏—Ç—å —Å–ø–æ—Ä;\n" +
                    "+rep @–∫–æ–º—É –ø—Ä–∏—á–∏–Ω–∞ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) ‚Äì –ø–æ–≤—ã—Å–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –ù–∞–ø—Ä–∏–º–µ—Ä, <code>+rep @durov_russia —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ–ª–µ–≥—É</code>.\n<b>–ò–∑–º–µ–Ω—è—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –º–æ–∂–Ω–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ —á–∞—Å</b>;\n" +
                    "-rep @–∫–æ–º—É –ø—Ä–∏—á–∏–Ω–∞ ‚Äì –ø–æ–Ω–∏–∑–∏—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –°–∏–Ω—Ç–∞–∫—Å–∏—Å —Ç–∞–∫–æ–π –∂–µ;\n" +
                    "/statistics ‚Äì —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –≤ —á–∞—Ç–µ;\n" +
                    "/help ‚Äì –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º.",
                    parse_mode='html')

# —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–∞—Ç–∞
@bot.message_handler(commands=['statistics'])
def statistics(message):
    connect = sqlite3.connect("data.db")
    cursor = connect.cursor()
    cursor.execute(f"""SELECT username, reputation FROM chat_{str(message.chat.id)[1:]} ORDER BY reputation DESC""")
    record = cursor.fetchall()
    user_stat = "@" + "\n@".join([user[0] + "   ---->   " + str(user[1]) for user in record])
    bot.send_message(message.chat.id, f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{user_stat}")

# –ø–∏–Ω–≥ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@bot.message_handler(commands=['all'])
def ping_all(message):
    connect = sqlite3.connect("data.db")
    cursor = connect.cursor()
    members = cursor.execute(f"""SELECT username from chat_{str(message.chat.id)[1:]}""").fetchall()
    bot.delete_message(message.chat.id, message.message_id)
    members_list = "\n@".join([x[0] for x in members if x[0] != message.from_user.username])
    bot.send_message(message.chat.id, f"@{message.from_user.username} —É–ø–æ–º–∏–Ω–∞–µ—Ç:\n\n@{members_list}")

# –ø–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É
@bot.message_handler(commands=['coinflip'])
def coinflip(message):
    bot_message = bot.send_message(message.chat.id, f"@{message.from_user.username} –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç –º–æ–Ω–µ—Ç–∫—É –∏ –≤—ã–ø–∞–¥–∞–µ—Ç...")
    time.sleep(2)
    bot.edit_message_text(f"{bot_message.text}\n<b>{'–æ—Ä—ë–ª' if random.randint(0, 1) == 0 else '—Ä–µ—à–∫–∞'}</b>{' ‚Äì –ø–æ–¥–∫—Ä—É—Ç–∫–∞? ü§®' if random.randint(0, 10) == 5 else ''}", message.chat.id, bot_message.message_id, parse_mode='html')

# –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ –æ—Ç–Ω–∏–º–∞–Ω–∏–µ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
def reputation(message):
    if message.text.lower()[:4] in ['+rep', '-rep', '+—Ä–µ–ø', '-—Ä–µ–ø']:
        connect = sqlite3.connect("data.db")
        cursor = connect.cursor()
        cooldown = cursor.execute(f"SELECT cooldown from chat_{str(message.chat.id)[1:]} WHERE id = {message.from_user.id}").fetchone()[0]
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫—É–ª–¥–∞—É–Ω
        if round(time.time()) - cooldown < 3600:
            cooldown_remain = int(((time.time() - cooldown - 3600) / 60) // -1)
            bot.send_message(message.chat.id, f"–ò–∑–º–µ–Ω—è—Ç—å —Ä–µ–ø—É—Ç–∞—Ü–∏—é –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ —á–∞—Å! –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ {cooldown_remain} –º–∏–Ω—É—Ç{'—ã' if cooldown_remain in [2, 3, 4] else '—É' if cooldown == 1 else ''}")
            return "cooldown"
        to_whom = message.text.split()[1][1:]
        # –≤—Å—Ç–∞–≤–∏—Ç—å –Ω–∏–∫ –±—É–¥—É—â–µ–≥–æ –±–æ—Ç–∞
        if to_whom == bot.get_me().username:
            if message.text[0] == "-":
                bot.send_message(message.chat.id, f"–í—ã —Ä–µ—à–∏–ª–∏ –ø–æ—Å—è–≥–Ω—É—Ç—å –Ω–∞ —Å–≤—è—Ç–æ–µ! –Ø –∫–æ–Ω—Ñ–∏—Å–∫–æ–≤–∞—Ç—å —É –≤–∞—Å {'–∫–æ—à–∫–∞ –∂–µ–Ω–∞ –∏ ' if random.randint(0, 1) == 1 else ''}{random.randint(1, 10)} –º–∏—Å–∫–∞ —Ä–∏—Å!")
            else:
                bot.send_message(message.chat.id, "–û–π —Å–ø–∞—Å–∏–±–∞\n   ü•∫\nüëâüèª üëàüèª")
            return "rep bot"
        if message.from_user.username != to_whom:
            cursor.execute(f"SELECT username, reputation from chat_{str(message.chat.id)[1:]}")
            current = cursor.fetchall()
            for user in current:
                if user[0] == to_whom:
                    rep = user[1] + 1 if message.text[0] == "+" else user[1] - 1
                    break
            try:
                cursor.execute(f"""UPDATE chat_{str(message.chat.id)[1:]} set reputation = ? where username = ?""", (rep, to_whom))
            except UnboundLocalError:
                bot.send_message(message.chat.id, "–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ —á–∞—Ç–µ –∏–ª–∏ –æ–Ω –Ω–µ –Ω–∞–ø–∏—Å–∞–ª /start")
                return UnboundLocalError
            cursor.execute(f"""UPDATE chat_{str(message.chat.id)[1:]} set cooldown = {time.time()} where id = {message.from_user.id}""")
            connect.commit()
            bot.delete_message(message.chat.id, message.message_id)
            try:
                bot.send_message(message.chat.id, f"@{message.from_user.username} {'–ø–æ–≤—ã—à–∞–µ—Ç' if message.text[0] == '+' else '–ø–æ–Ω–∏–∂–∞–µ—Ç'} —Ä–µ–ø—É—Ç–∞—Ü–∏—é @{to_whom}.\n–ü—Ä–∏—á–∏–Ω–∞: {message.text.split(' ', 2)[2]}.\n–¢–µ–ø–µ—Ä—å —Ä–µ–ø—É—Ç–∞—Ü–∏—è —Ä–∞–≤–Ω–∞ {rep}")
            except IndexError:
                bot.send_message(message.chat.id, f"@{message.from_user.username} {'–ø–æ–≤—ã—à–∞–µ—Ç' if message.text[0] == '+' else '–ø–æ–Ω–∏–∂–∞–µ—Ç'} —Ä–µ–ø—É—Ç–∞—Ü–∏—é @{to_whom}.\n–ü—Ä–∏—á–∏–Ω–∞: –Ω–µ—Ç.\n–¢–µ–ø–µ—Ä—å —Ä–µ–ø—É—Ç–∞—Ü–∏—è —Ä–∞–≤–Ω–∞ {rep}")
    else:
        bot.send_message(message.chat.id, f"–ù–µ–ª—å–∑—è {'–ø–æ–≤—ãc–∏—Ç—å' if message.text[0] == '+' else '–ø–æ–Ω–∏–∑–∏—Ç—å'} —Ä–µ–ø—É—Ç–∞—Ü–∏—é —Å–∞–º–æ–º—É —Å–µ–±–µ!")


if __name__ == "__main__":
    bot.polling()